#!/bin/zsh

# z-bump
# ------
# A VERSION bumper that automate build-number generation when using Git.
#
# Version:
# Last update:
#

# Constants

readonly ME="z-bump"
readonly VERSION=""

readonly SECS_PER_YEAR=$((60 * 60 * 24 * 365))

# Usage helper

_usage()
{
    cat <<-EOUSAGE
usage: ${ME} [<options>[=<value>]] [<command>]

Special options:

  -h|--help               show this message, then exit
  -V|--version            show z-bump version, then exit
  -d|--debug              simulate bumping and enable debugging

Normal options:
  -b|--branch=<branch>    override default stable branch
  -o|--output=<path>      override default VERSION file
  -c|--clog=<path>        override default CHANGELOG file

Commands:
  major                   bump major version and reset other
                          counters (except for the build number)
  minor                   bump minor and reset patch counters
  patch                   bump patch version
EOUSAGE
}

# Set defaults

DEBUG=""

DEFAULT_BRANCH="master"
CLOG="CHANGELOG"
OUTPUT="VERSION"

# Parse options from command line

while [ "${1}" != "" ]; do
    local param=`echo ${1} | awk -F= '{print $1}'`
    local value=`echo ${1} | awk -F= '{print $2}'`

    case ${param} in
        -h | --help)
            _usage
            exit 0
            ;;
        -d | --debug)
            DEBUG="yes"
            ;;
        -V | --version)
            echo "${ME} version ${VERSION}"
            exit 0
            ;;
        -b | --branch)
            DEFAULT_BRANCH=${value}
            ;;
        -c | --clog)
            CLOG=${value}
            ;;
        -o | --output)
            OUTPUT=${value}
            ;;
        *)
            echo "Unknown option: ${param}"
            _usage
            exit 1
            ;;
    esac
    shift
done

# ----
#  GO
# ----

current_branch="`git symbolic-ref --short -q HEAD`"
current_commit="`git rev-parse HEAD`"

latest_default_commit="`git rev-parse ${DEFAULT_BRANCH}`"

default_history_ts=("${(f)$(git log --pretty=format:'%at' ${latest_default_commit})}")
initial_default_commit_ts="${default_history_ts[-1]}"
latest_default_commit_ts="${default_history_ts[1]}"

default_commits_count="`git rev-list ${latest_default_commit} --count`"

current_to_default=("${(f)$(git rev-list ${DEFAULT_BRANCH}.. || git rev-list origin/${DEFAULT_BRANCH}..)}")
current_commits_count=`echo ${#current_to_default[@]}`

default_age=$(( (latest_default_commit_ts - initial_default_commit_ts) * 1000 / SECS_PER_YEAR ))

initial_current_commit=""
initial_current_commit_short="dev"

[[ ! ${current_branch} =~ "dev" || -n ${DEBUG} ]] && {
    initial_current_commit="`diff -u    <(git rev-list --first-parent ${current_branch}) \
                                        <(git rev-list --first-parent ${DEFAULT_BRANCH}) \
                                        | sed -ne 's/^-//p' \
                                        | tail -n 1`"

    [[ -z ${DEBUG} ]] && \
        initial_current_commit_short="` echo ${initial_current_commit} \
                                        | sed 's/[^a-zA-Z]//g' \
                                        | sed -E 's/(.{3}).*$/\1/'`"
}

# Calculating the build number
build_number=$(( default_commits_count + default_age ))
[[ ${current_branch} =~ "dev" || -n ${initial_current_commit} ]] \
    && build_number+="-${initial_current_commit_short}${current_commits_count}"

# Set OUTPUT here if debug is enabled to always override -o option
[[ -n ${DEBUG} ]] && {
    default_history=("${(f)$(git log --pretty=format:'%H' ${latest_default_commit})}")
    initial_default_commit="${default_history[-1]}"
    latest_default_commit="${default_history[1]}"

    echo "Current release number (read from ${OUTPUT}): `cat ${OUTPUT}`"

    OUTPUT="/dev/stdout"

    cat <<-EODEBUG
Default branch: ${DEFAULT_BRANCH}
Current branch: ${current_branch}

On ${DEFAULT_BRANCH} ...
Initial commit timestamp: ${initial_default_commit_ts} (${initial_default_commit})
Latest commit timestamp: ${latest_default_commit_ts} (${latest_default_commit})

On ${current_branch} ...
Initial commit: ${initial_current_commit_short} (${initial_current_commit})
Latest commit: ${current_commit}
Commits deviation from ${DEFAULT_BRANCH}: ${current_commits_count}

Build number: ${build_number}
EODEBUG
}

